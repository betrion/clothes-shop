{"version":3,"file":"static/js/752.4efa6067.chunk.js","mappings":"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","sources":["styles/Card.style.js","Card.jsx","styles/GridWrapper.js","CardGrid.jsx","Products.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CardWrapper = styled.div`\n  display: flex;\n  width: 15vw;\n  justify-content: center;\n  align-items: center;\n\n  & img {\n    width: 120px;\n    display: block;\n    padding: 1rem;\n  }\n\n  & button {\n    color: ${({ theme }) => theme.colors.secondary};\n    background-color: ${({ theme }) => theme.colors.active};\n    border-radius: 5%;\n    border: 1px solid ${({ theme }) => theme.colors.primary};\n    padding: 5px;\n  }\n  & button:hover {\n    background-color: ${({ theme }) => theme.colors.active.primary};\n    color: ${({ theme }) => theme.colors.primary};\n  }\n  & button:active {\n    background-color: ${({ theme }) => theme.colors.active.secondary};\n  }\n`;\n","import { CardWrapper } from \"./styles/Card.style\";\nimport titleFormat from \"./functions/formatTitle\";\nconst Card = ({\n  item,\n  selectedProducts,\n  setSelectedProducts,\n  amountInCart,\n  setAmountInCart,\n}) => {\n  const handleAddToCart = (e) => {\n    let isInCart = false;\n    if (selectedProducts.length > 0)\n      selectedProducts.forEach((element) => {\n        if (element.item.title === item.title) {\n          element.quantity += 1;\n          isInCart = true;\n          setAmountInCart(amountInCart + 1);\n        }\n      });\n    if (!isInCart) {\n      setSelectedProducts([...selectedProducts, { item: item, quantity: 1 }]);\n      setAmountInCart(amountInCart + 1);\n    }\n  };\n\n  return (\n    <CardWrapper>\n      <div key={item.id} id={item.id} name={item.title}>\n        <img src={item.image} alt={item.description} />\n        <h4>{titleFormat(item.title)}</h4>\n        <h5>{item.price} $</h5>\n        <button onClick={handleAddToCart}>Add to cart</button>\n      </div>\n    </CardWrapper>\n  );\n};\n\nexport default Card;\n","import styled from \"styled-components\";\n\nexport const GridWrapper = styled.div`\n  display: grid;\n  gap: 1rem;\n  grid-template-columns: repeat(4, 1fr);\n  padding: 1rem 2rem;\n  animation: fadeIn ease 2s;\n  @keyframes fadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n  @media (max-width: 750px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n  @media (max-width: 550px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n","import Card from \"./Card\";\nimport { GridWrapper } from \"./styles/GridWrapper\";\nconst CardGrid = ({\n  items,\n  selectedProducts,\n  setSelectedProducts,\n  totalPrice,\n  setTotalPrice,\n  amountInCart,\n  setAmountInCart,\n}) => {\n  return (\n    <GridWrapper>\n      {items &&\n        items.map((item) => (\n          <Card\n            item={item}\n            items={items}\n            key={item.id}\n            selectedProducts={selectedProducts}\n            setSelectedProducts={setSelectedProducts}\n            {...{ totalPrice, setTotalPrice, amountInCart, setAmountInCart }}\n          />\n        ))}\n    </GridWrapper>\n  );\n};\n\nexport default CardGrid;\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport CardGrid from \"./CardGrid\";\nconst Products = ({\n  selectedProducts,\n  setSelectedProducts,\n  amountInCart,\n  setAmountInCart,\n  totalPrice,\n}) => {\n  const [items, setItems] = useState([]);\n\n  const getItems = async (amount) => {\n    const itemsToGet = [];\n    const data = await axios\n      .get(`https://fakestoreapi.com/products?limit=${amount}`)\n      .then((res) => {\n        res.data.forEach((element) => {\n          const id = element.id;\n          const title = element.title;\n          const price = element.price;\n          const description = element.description;\n          const image = element.image;\n          const quantity = 0;\n          itemsToGet.push({ id, title, price, description, image, quantity });\n        });\n      })\n      .catch((error) =>\n        console.log(\"ERROR: invalid fetch url, error type: \", error)\n      );\n\n    return itemsToGet;\n  };\n  useEffect(() => {\n    const loadItems = async () => {\n      setItems(await getItems(10));\n    };\n    loadItems();\n  }, []);\n\n  return (\n    <>\n      <CardGrid\n        {...{\n          items,\n          selectedProducts,\n          setSelectedProducts,\n          setAmountInCart,\n          amountInCart,\n          totalPrice,\n        }}\n      />\n    </>\n  );\n};\n\nexport default Products;\n"],"names":["CardWrapper","styled","theme","colors","secondary","active","primary","item","selectedProducts","setSelectedProducts","amountInCart","setAmountInCart","id","name","title","src","image","alt","description","titleFormat","price","onClick","e","isInCart","length","forEach","element","quantity","GridWrapper","items","totalPrice","setTotalPrice","map","useState","setItems","getItems","amount","itemsToGet","axios","then","res","data","push","catch","error","console","log","useEffect","loadItems"],"sourceRoot":""}